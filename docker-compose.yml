version: '3'
services:
  kafka:
    image: confluentinc/cp-kafka:5.1.0
    networks:
      default:
        aliases:
          - kafka
    environment:
    - KAFKA_ADVERTISED_LISTENERS=LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
    - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
    - KAFKA_INTER_BROKER_LISTENER_NAME= LISTENER_DOCKER_INTERNAL
    - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
    - "9092:9092"
    depends_on:
    - zookeeper
    volumes:
      - ./kafka_scripts:/kafka_scripts
    command: ["/kafka_scripts/wait_for_zookeeper.sh", "zookeeper:2181", "/etc/confluent/docker/run"]
  zookeeper:
    image: confluentinc/cp-zookeeper:5.1.0
    environment:
    - ZOOKEEPER_CLIENT_PORT=2181
    ports:
    - "2181:2181"
  e2e:
    build: ./e2e/.
    depends_on:
      - kafka
    environment:
    - KAFKA_BOOTSTRAP_SERVERS=kafka:19092
    ports:
    - "3231:3231"
  sparkel:
    image: ${SPARKEL_IMAGE}
    depends_on:
      - vtpmock
    ports:
    - "8080:8080"
    volumes:
    - ./mockkeys:/mockkeys
    environment:
    - NAV_TRUSTSTORE_PATH=/mockkeys/truststore.jks
    - NAV_TRUSTSTORE_PASSWORD=changeit
    # this will be mocked
    - JWKS_URL=https://vtpmock:8063/isso/oauth2/connect/jwk_uri
    - JWT_ISSUER=https://vtpmock:8063/isso/oauth2
    - SECURITY_TOKEN_SERVICE_URL=https://vtpmock:8063/SecurityTokenServiceProvider/
    - SECURITY_TOKEN_SERVICE_REST_URL=https://vtpmock:8063/stsrest
    - SECURITY_TOKEN_SERVICE_USERNAME=srvheisann
    - SECURITY_TOKEN_SERVICE_PASSWORD=tralalal
    - PERSON_ENDPOINTURL=https://vtpmock:8063/tpsws/ws/Person/v3
    - INNTEKT_ENDPOINTURL=https://vtpmock:8063/inntektskomponenten-ws/inntekt/v3/Inntekt
    - AAREG_ENDPOINTURL=https://vtpmock:8063/aareg-core/ArbeidsforholdService/v3
    - ORGANISASJON_ENDPOINTURL=https://vtpmock:8063/ereg/ws/OrganisasjonService/v5
    - SAK_OG_BEHANDLING_ENDPOINTURL=http://localhost/TODO
    - HENT_SYKEPENGER_ENDPOINTURL=https://vtpmock:8063/sykepenger/v2/Sykepenger_v2
    - MELDEKORT_UTBETALINGSGRUNNLAG_ENDPOINTURL=https://vtpmock:8063/ail_ws/MeldekortUtbetalingsgrunnlag_v1
    - AKTORREGISTER_URL=https://vtpmock:8063/aktoerrest
    - ARBEIDSFORDELING_ENDPOINTURL=http://localhost/TODO
    - DISABLE_CN_CHECK=true
  spa:
    image: ${SPA_IMAGE}
    depends_on:
      - kafka
      - sparkel
    volumes:
      - ./e2e_scripts:/e2e_scripts
      - ./mockkeys:/mockkeys
    environment:
    - KAFKA_BOOTSTRAP_SERVERS=kafka:19092
    - E2E_HOST=e2e:3231
    - NAV_TRUSTSTORE_PATH=/mockkeys/truststore.jks
    - NAV_TRUSTSTORE_PASSWORD=changeit
    - SERVICEUSER_USERNAME=srvspa
    - SERVICEUSER_PASSWORD=trololol
    - SECURITY_TOKEN_SERVICE_REST_URL=https://vtpmock:8063/stsrest
    - SPARKEL_BASE_URL=http://sparkel:8080
    - PLAIN_TEXT_KAFKA=true
    entrypoint: ["/e2e_scripts/wait_for_e2e.sh", "/entrypoint.sh"]
    ports:
    - "8181:80"
  vtpmock:
    image:${VTPMOCK_IMAGE}
    ports:
    - "8063:8063"
    - "8060:8060"
    #environment:
    #- JAVA_OPTS=-Dscenarios.dir=/app/model/scenarios/ -Dscenarios.reload=true
    volumes:
    - ./mockkeys:/root/spsak
    #- ./testscenarios:/app/model/scenarios
